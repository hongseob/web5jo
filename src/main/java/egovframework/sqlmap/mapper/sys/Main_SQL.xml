<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main">


	<select id="countCampaignlistforAUser" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from campaign as
		cp
		INNER JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id = cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		WHERE
		cp.u_id = #{u_id}
		ORDER
		BY cp.c_id DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaignlistforBUser" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from
		campaign as
		cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM public.campaign_applicant as
		ca
		INNER JOIN
		member_info as mi
		ON
		ca.id = mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		= cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C

	</select>

	<select id="countCampaignWaitforA" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from campaign as
		cp
		INNER JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id = cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		WHERE
		cp.u_id = #{u_id} and cp.c_st='0'
		ORDER
		BY cp.c_id DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaignCollectforA" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from campaign as
		cp
		INNER JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id = cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		WHERE
		cp.u_id = #{u_id} and cp.c_st='2'
		ORDER
		BY cp.c_id DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaigningforA" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from campaign as
		cp
		INNER JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id = cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		WHERE
		cp.u_id = #{u_id} and cp.c_st='3'
		ORDER
		BY cp.c_id DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaignendforA" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from campaign as
		cp
		INNER JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id = cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		WHERE
		cp.u_id = #{u_id} and cp.c_st='5'
		ORDER
		BY cp.c_id DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaignReservingforB" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from
		campaign as
		cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM public.campaign_applicant as
		ca
		INNER JOIN
		member_info as mi
		ON
		ca.id = mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		= cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}
		and
		mi.status='1'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaignChecktforB" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from
		campaign as
		cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM public.campaign_applicant as
		ca
		INNER
		JOIN
		member_info as mi
		ON
		ca.id = mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		=
		cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}
		and
		mi.status='3'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaigningforB" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from
		campaign as
		cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM public.campaign_applicant as
		ca
		INNER
		JOIN
		member_info as mi
		ON
		ca.id = mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		=
		cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}
		and
		mi.status='4'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
	</select>

	<select id="countCampaignendforB" parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM (
		SELECT *
		from(
		SELECT *
		from
		campaign as
		cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM public.campaign_applicant as
		ca
		INNER
		JOIN
		member_info as mi
		ON
		ca.id = mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		=
		cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}
		and
		mi.status='5'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
	</select>

	<select id="selectCampaignBoardforAUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * , (ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		cp.c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		= cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by c_id)
		as ca
		ON cp.c_id = ca.c_id
		WHERE cp.u_id
		= #{u_id}
		ORDER
		BY cp.c_id
		DESC
		)
		as
		B
		) as C
		WHERE RN BETWEEN #{start} AND
		#{end};
	</select>

	<select id="selectCampaignBoardforBUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * , (ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		mi.status as c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca2.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id , ca.status
		FROM public.campaign_applicant as ca
		INNER JOIN
		member_info as mi
		ON
		ca.id = mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category), ',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON cc.c_id
		= cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN #{start} AND
		#{end};
	</select>

	<select id="selectWaitBoardforAUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * , (ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		cp.c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		= cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT c_id,
		count(*) as applicant_num
		FROM
		public.campaign_applicant
		GROUP by c_id)
		as ca
		ON cp.c_id = ca.c_id
		WHERE cp.u_id
		= #{u_id} and cp.c_st='0'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN
		#{start} AND
		#{end};
	</select>

	<select id="selectCollectBoardforAUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * , (ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		cp.c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		= cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT c_id,
		count(*) as applicant_num
		FROM
		public.campaign_applicant
		GROUP by c_id)
		as ca
		ON cp.c_id = ca.c_id
		WHERE cp.u_id
		= #{u_id} and cp.c_st='2'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN
		#{start} AND
		#{end};

	</select>

	<select id="selectIngBoardforAUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * , (ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		cp.c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		= cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT c_id,
		count(*) as applicant_num
		FROM
		public.campaign_applicant
		GROUP by c_id)
		as ca
		ON cp.c_id = ca.c_id
		WHERE cp.u_id
		= #{u_id} and cp.c_st='3'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN
		#{start} AND
		#{end};

	</select>

	<select id="selectEndBoardforAUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * , (ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		cp.c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category),
		',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON
		cc.c_id
		= cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT c_id,
		count(*) as applicant_num
		FROM
		public.campaign_applicant
		GROUP by c_id)
		as ca
		ON cp.c_id = ca.c_id
		WHERE cp.u_id
		= #{u_id} and cp.c_st='5'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN
		#{start} AND
		#{end};
	</select>

	<select id="selectReservingBoardforBUser"
		parameterType="HashMap" resultType="EgovMap">
		SELECT * FROM (
		SELECT * ,
		(ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		mi.status as c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca2.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM
		public.campaign_applicant as ca
		INNER
		JOIN
		member_info as mi
		ON
		ca.id =
		mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category), ',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON cc.c_id
		=
		cp.c_id
		INNER JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}and
		mi.status='1'
		ORDER
		BY cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN #{start}
		AND
		#{end};
	</select>

	<select id="selectCheckBoardforBUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * ,
		(ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		mi.status as c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca2.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM
		public.campaign_applicant as ca
		INNER
		JOIN
		member_info as mi
		ON
		ca.id =
		mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category), ',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON cc.c_id
		=
		cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as
		applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON
		cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}and
		mi.status='3'
		ORDER
		BY
		cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN #{start}
		AND
		#{end};
	</select>

	<select id="selectIngBoardforBUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * ,
		(ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		mi.status as c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca2.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM
		public.campaign_applicant as ca
		INNER
		JOIN
		member_info as mi
		ON
		ca.id =
		mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category), ',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON cc.c_id
		=
		cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as
		applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON
		cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}and
		mi.status='4'
		ORDER
		BY
		cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN #{start}
		AND
		#{end};

	</select>

	<select id="selectEndBoardforBUser" parameterType="HashMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT * ,
		(ROW_NUMBER() OVER()) AS RN
		from(
		SELECT
		cp.c_id,
		mi.status as c_st,
		cp.c_nm,
		cc.category,
		cp.st_date,
		cp.ed_date,
		cp.estimate,
		cp.c_mbr,
		ca2.applicant_num,
		cp.c_dt,
		ci.file_svr_name
		from
		campaign as cp
		INNER
		JOIN(SELECT mi.u_id, ca.c_id, ca.status
		FROM
		public.campaign_applicant as ca
		INNER
		JOIN
		member_info as mi
		ON
		ca.id =
		mi.id
		) as mi
		ON
		mi.c_id = cp.c_id
		INNER
		JOIN (SELECT
		cc.c_id,
		ARRAY_TO_STRING(ARRAY_AGG(cc.category), ',')as
		category
		FROM
		campaign_category as cc
		GROUP by cc.c_id) as cc
		ON cc.c_id
		=
		cp.c_id
		INNER
		JOIN campaign_img
		as ci
		ON
		cp.c_id = ci.c_id
		LEFT
		OUTER JOIN (SELECT
		c_id,
		count(*) as
		applicant_num
		FROM public.campaign_applicant
		GROUP by
		c_id)
		as ca2
		ON
		cp.c_id = ca2.c_id
		WHERE mi.u_id = #{u_id}and
		mi.status='5'
		ORDER
		BY
		cp.c_id
		DESC
		)
		as B
		) as C
		WHERE RN BETWEEN #{start}
		AND
		#{end};
	</select>


	<select id="selectMainmenu" parameterType="HashMap"
		resultType="EgovMap">
		SELECT m_id, name, icon
		FROM public.campaign_mainmenu
		ORDER
		BY m_id ASC;
	</select>

	<select id="selectSubmenu" parameterType="HashMap"
		resultType="EgovMap">
		SELECT s_id, m_name, name, icon
		FROM public.campaign_submenu
		ORDER BY s_id ASC;
	</select>


	<select id="selectImg" parameterType="EgovMap"
		resultType="EgovMap">
		SELECT * FROM campaign_img t1
		WHERE t1.c_id = ${cId}
	</select>


	<select id="selectmainmenuname" parameterType="String"
		resultType="EgovMap">
		SELECT m_id, name, icon
		FROM public.campaign_mainmenu
		WHERE
		name=#{menuname};
	</select>

	<select id="selectsubmenuname" parameterType="String"
		resultType="EgovMap">
		SELECT s_id, m_name, name, icon
		FROM public.campaign_submenu
		WHERE
		name=#{submenuname};
	</select>

	<insert id="insertnewmainmenu" parameterType="HashMap">
		INSERT INTO
		public.campaign_mainmenu(
		m_id, name, icon)
		VALUES (#{id},
		#{newname},
		#{icon})ON CONFLICT(name) DO UPDATE SET m_id=#{id},
		name=#{newname},
		icon=#{icon};
	</insert>


	<update id="updatemainmenuinsub" parameterType="HashMap">
		UPDATE
		public.campaign_submenu
		SET m_name=#{newname}
		WHERE
		m_name=#{editname};
	</update>

	<delete id="deletsubmenuinmain" parameterType="HashMap">
		DELETE FROM
		public.campaign_submenu
		WHERE m_name=#{editname};
	</delete>


	<delete id="deletemainmenu" parameterType="HashMap">
		DELETE FROM
		public.campaign_mainmenu
		WHERE name=#{editname};
	</delete>


	<update id="updatemainmenu" parameterType="HashMap">
		UPDATE
		public.campaign_mainmenu
		SET m_id=#{id}, name=#{newname}, icon=#{icon}
		WHERE name=#{editname};
	</update>

	<update id="updatesubmenu" parameterType="HashMap">
		UPDATE
		public.campaign_submenu
		SET s_id=#{id}, m_name=#{m_name},
		name=#{newname}, icon=#{icon}
		WHERE name=#{editname};
	</update>

	<delete id="deletesubmenu" parameterType="HashMap">
		DELETE FROM
		public.campaign_submenu
		WHERE name=#{editname};
	</delete>

	<insert id="insertsubmenu" parameterType="HashMap">
		INSERT INTO
		public.campaign_submenu(
		s_id, m_name, name, icon)
		VALUES (#{id},
		#{m_name},
		#{newname},
		#{icon})ON CONFLICT(name) DO UPDATE SET
		s_id=#{id},
		m_name=#{m_name},
		name=#{newname},
		icon=#{icon};
	</insert>

	<select id="selectIdByUid" parameterType="EgovMap"
		resultType="integer">
		SELECT id FROM member_info
		WHERE u_id = #{uId}
	</select>

	<insert id="insertInquireInHeader" parameterType="EgovMap">
		INSERT INTO
		inquire(
		inqure_id, email, title, contents, sender, status, group_id)
		VALUES (NEXTVAL('inqure_id_seq'), 'admin', #{title}, #{contents},
		#{id}, 1, '1');

	</insert>
	<select id="selectUserAlarmCountByHeader"
		parameterType="EgovMap" resultType="integer">
		SELECT count(*) FROM inquire
		WHERE
		email = #{uId} AND status !='4' and status !='5' and sender = 23
	</select>
	<select id="selectUserAlarmCount" parameterType="EgovMap"
		resultType="integer">
		SELECT count(*) FROM inquire
		WHERE email = #{uId} AND status
		!='4' and sender = 23
	</select>

	<select id="selectUserAlarmList" parameterType="EgovMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT inqure_id, email, title, contents,
		write_date, sender, status,
		link_id, (ROW_NUMBER() OVER()) AS num FROM
		(
		SELECT * FROM inquire
		WHERE email =#{uId} AND status !=
		'4' AND sender
		= 23
		ORDER BY write_date DESC
		) a
		) b
		WHERE b.num between #{start} and
		#{end}
	</select>

	<select id="selectUserAlarmBoard" parameterType="EgovMap"
		resultType="EgovMap">
		SELECT inqure_id, email, title, contents,
		to_char(write_date, 'yyyy.mm.dd HH24:MI') as write_date, sender,
		status, link_id, group_id
		FROM inquire
		WHERE inqure_id = ${inqureId}

	</select>

	<update id="updateReadByUser" parameterType="EgovMap">
		UPDATE inquire
		SET
		status = '5'
		WHERE inqure_id = ${inqureId}
	</update>

	<update id="updateReadByUserArrow" parameterType="EgovMap">
		UPDATE inquire
		SET status = '5'
		WHERE num = ${num}
	</update>

	<select id="selectUserAlarmBoardByArrow" parameterType="EgovMap"
		resultType="EgovMap">
		SELECT * FROM (
		SELECT inqure_id, email, title, contents,
		write_date, sender, status,
		link_id, (ROW_NUMBER() OVER()) AS num FROM
		(
		SELECT * FROM inquire
		WHERE email = #{uId} AND status != '4' AND
		sender = 23
		ORDER BY write_date DESC
		) a
		) b
		WHERE b.num = ${num}
	</select>

	<update id="updateAlarmStatus4" parameterType="EgovMap">
		UPDATE inquire
		SET
		status = '4'
		WHERE inqure_id = ${inqureId}
	</update>
	
	<select id="selectMemberByEmail" parameterType="EgovMap" resultType="integer">
		SELECT COUNT(*) FROM member_info
		WHERE u_id = #{uId}::TEXT
	</select>
</mapper>





